<link rel="stylesheet" href={{ asset('css/map.style.css') }}>

<div class="full">
    <div class="container">
        <form id="data">
            <label id="lblLoc">
                Enter your location
                <input type="text" id="inpLoc" name="location" placeholder="Tour Eiffel...">
            </label>
            <button type="submit">Search location</button>
        </form>
        <div id="map">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Accusantium, cum fugiat illum incidunt magni repellendus sed ullam! Distinctio dolores doloribus ea enim eum exercitationem id ipsam itaque, molestiae placeat velit.</div>
    </div>
</div>

<script>

    let map = L.map('map').setView([48.8566, 2.3522], 16);

    L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
        maxZoom: 19,
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a>'
    }).addTo(map);

    try {
        map.locate({ setView: true, maxZoom: 16 });

        map.on('locationfound', (e) => {
            L.marker(e.latlng).addTo(map)
        });

        map.on('locationerror', (e) => {
            console.error('Erreur de g√©olocalisation :', e.message);
        });
    } catch (error) {
        console.error('Erreur lors de la tentative de g√©olocalisation :', error);
    }

    try {
        fetch('/api/stations')
            .then(response => {
                if (!response.ok) {
                    throw new Error(`Erreur HTTP : ${response.status}`);
                }
                return response.json();
            })
            .then(data => {
                data.records.forEach(record => {
                    const station = record.fields;

                    if (station.coordonnees_geo) {
                        const [lat, lon] = station.coordonnees_geo;

                        L.marker([lat, lon]).addTo(map)
                            .bindPopup(`
                                <div>
                                    <h2 style="text-align: center">${station.name}</h2>
                                    <p><strong>üö≤ V√©los m√©caniques disponibles :</strong> ${station.mechanical}</p>
                                    <p><strong>‚ö°Ô∏è V√©los √©lectriques disponibles :</strong> ${station.ebike}</p>
                                    <p><strong>üîì Bornes libres :</strong> ${station.numdocksavailable}</p>
                                </div>
                            `);
                    } else {
                        console.warn('Coordonn√©es manquantes pour la station :', station);
                    }
                });
            })
            .catch(error => {
                console.error('Erreur lors de la r√©cup√©ration des stations :', error);
            });
    } catch (error) {
        console.error('Erreur lors de l\'initialisation de la r√©cup√©ration des stations :', error);
    }

</script>